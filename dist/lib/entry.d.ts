import { MediaFormat } from "../database";
import { Anime, Manga, Type } from "../mapping";
export declare const createEntry: (data: {
    toInsert: Anime | Manga;
    type: Type;
}) => Promise<{
    title: PrismaJson.AnimeTitle;
    id: string;
    malId: string;
    slug: string;
    kitsuId: string | null;
    coverImage: string | null;
    bannerImage: string | null;
    trailer: string | null;
    status: import("../database").AiringStatus | null;
    season: import("../database").AiringSeason;
    currentEpisode: number | null;
    mappings: import("../database").Prisma.JsonValue;
    synonyms: string[];
    countryOfOrigin: string | null;
    description: string | null;
    duration: number | null;
    color: string | null;
    year: number | null;
    rating: PrismaJson.AnimeRating;
    popularity: PrismaJson.AnimePopularity;
    type: string;
    format: MediaFormat | null;
    relations: import("../database").Prisma.JsonValue;
    totalEpisodes: number | null;
    genres: string[];
    tags: string[];
    averageRating: number;
    averagePopularity: number;
    save: () => import("../database").Prisma.Prisma__AnimeClient<{
        title: PrismaJson.AnimeTitle;
        id: string;
        malId: string;
        slug: string;
        kitsuId: string | null;
        coverImage: string | null;
        bannerImage: string | null;
        trailer: string | null;
        status: import("../database").AiringStatus | null;
        season: import("../database").AiringSeason;
        currentEpisode: number | null;
        mappings: import("../database").Prisma.JsonValue;
        synonyms: string[];
        countryOfOrigin: string | null;
        description: string | null;
        duration: number | null;
        color: string | null;
        year: number | null;
        rating: PrismaJson.AnimeRating;
        popularity: PrismaJson.AnimePopularity;
        type: string;
        format: MediaFormat | null;
        relations: import("../database").Prisma.JsonValue;
        totalEpisodes: number | null;
        genres: string[];
        tags: string[];
        averageRating: number | null;
        averagePopularity: number | null;
    }, never, {
        result: {};
        model: {};
        query: {};
        client: {};
    }>;
} | {
    title: PrismaJson.AnimeTitle;
    id: string;
    malId: string;
    slug: string;
    kitsuId: string | null;
    coverImage: string | null;
    bannerImage: string | null;
    status: import("../database").AiringStatus | null;
    mappings: import("../database").Prisma.JsonValue;
    synonyms: string[];
    countryOfOrigin: string | null;
    description: string | null;
    duration: number | null;
    color: string | null;
    rating: PrismaJson.AnimeRating;
    popularity: PrismaJson.AnimePopularity;
    type: string;
    format: MediaFormat | null;
    relations: import("../database").Prisma.JsonValue;
    genres: string[];
    tags: string[];
    averageRating: number;
    averagePopularity: number;
    save: () => import("../database").Prisma.Prisma__MangaClient<{
        title: PrismaJson.AnimeTitle;
        id: string;
        malId: string;
        slug: string;
        kitsuId: string | null;
        coverImage: string | null;
        bannerImage: string | null;
        status: import("../database").AiringStatus | null;
        mappings: import("../database").Prisma.JsonValue;
        synonyms: string[];
        countryOfOrigin: string | null;
        description: string | null;
        duration: number | null;
        color: string | null;
        rating: PrismaJson.AnimeRating;
        popularity: PrismaJson.AnimePopularity;
        type: string;
        format: MediaFormat | null;
        relations: import("../database").Prisma.JsonValue;
        genres: string[];
        tags: string[];
        averageRating: number | null;
        averagePopularity: number | null;
        totalChapters: number | null;
        totalVolumes: number | null;
    }, never, {
        result: {};
        model: {};
        query: {};
        client: {};
    }>;
    totalChapters: number | null;
    totalVolumes: number | null;
} | Anime | Manga>;
