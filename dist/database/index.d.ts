import { PrismaClient } from '@prisma/client';
import { Prisma as Pris } from "@prisma/client";
import { Anime, Format, Manga, Type } from '../mapping';
export * from '@prisma/client';
export declare const prisma: Omit<PrismaClient<{
    log: "error"[];
}, never, false, {
    result: {} & Record<string, {}> & {
        anime: {
            save: () => {
                needs: {
                    id: true;
                };
                compute(anime: {
                    id: string;
                }): () => Pris.Prisma__AnimeClient<{
                    title: PrismaJson.AnimeTitle;
                    synonyms: string[];
                    totalEpisodes: number | null;
                    currentEpisode: number | null;
                    bannerImage: string | null;
                    coverImage: string | null;
                    color: string | null;
                    season: import(".prisma/client").AiringSeason;
                    year: number | null;
                    status: import(".prisma/client").AiringStatus | null;
                    genres: string[];
                    description: string | null;
                    format: import(".prisma/client").MediaFormat | null;
                    duration: number | null;
                    trailer: string | null;
                    countryOfOrigin: string | null;
                    tags: string[];
                    rating: PrismaJson.MetaSitesMetric;
                    popularity: PrismaJson.MetaSitesMetric;
                    id: string;
                    malId: string;
                    kitsuId: string | null;
                    slug: string;
                    mappings: Pris.JsonValue;
                    type: string;
                    relations: Pris.JsonValue;
                    averageRating: number | null;
                    averagePopularity: number | null;
                }, never, {
                    result: {};
                    model: {};
                    query: {};
                    client: {};
                }>;
            };
            averageRating: () => {
                needs: {
                    rating: true;
                };
                compute(anime: {
                    rating: PrismaJson.MetaSitesMetric;
                }): number;
            };
            averagePopularity: () => {
                needs: {
                    popularity: true;
                };
                compute(anime: {
                    popularity: PrismaJson.MetaSitesMetric;
                }): number;
            };
        };
    };
    model: {} & Record<string, {}>;
    client: {};
    query: {};
}>, "$use"> & {};
declare global {
    namespace PrismaJson {
        type AnimeTitle = {
            english: string | null;
            romaji: string | null;
            native: string | null;
        };
        type AnimeRating = MetaSitesMetric;
        type AnimePopularity = MetaSitesMetric;
        type MetaSitesMetric = {
            anilist: number | SplitEntryMapping | null;
            mal: number | SplitEntryMapping | null;
            kitsu: number | SplitEntryMapping | null;
        };
        type SubdubMapping = {
            sub: string | number | null;
            dub: string | number | null;
        };
        type SplitEntryMapping = `${number}@${number}-${number}`;
    }
}
export declare const seasonal: (trending: Anime[] | Manga[], popular: Anime[] | Manga[], top: Anime[] | Manga[], seasonal: Anime[] | Manga[]) => Promise<{
    trending: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        totalEpisodes: number | null;
        currentEpisode: number | null;
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        season: import(".prisma/client").AiringSeason;
        year: number | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        trailer: string | null;
        countryOfOrigin: string | null;
        tags: string[];
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number;
        averagePopularity: number;
        save: () => Pris.Prisma__AnimeClient<{
            title: PrismaJson.AnimeTitle;
            synonyms: string[];
            totalEpisodes: number | null;
            currentEpisode: number | null;
            bannerImage: string | null;
            coverImage: string | null;
            color: string | null;
            season: import(".prisma/client").AiringSeason;
            year: number | null;
            status: import(".prisma/client").AiringStatus | null;
            genres: string[];
            description: string | null;
            format: import(".prisma/client").MediaFormat | null;
            duration: number | null;
            trailer: string | null;
            countryOfOrigin: string | null;
            tags: string[];
            rating: PrismaJson.MetaSitesMetric;
            popularity: PrismaJson.MetaSitesMetric;
            id: string;
            malId: string;
            kitsuId: string | null;
            slug: string;
            mappings: Pris.JsonValue;
            type: string;
            relations: Pris.JsonValue;
            averageRating: number | null;
            averagePopularity: number | null;
        }, never, {
            result: {};
            model: {};
            query: {};
            client: {};
        }>;
    }[];
    popular: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        totalEpisodes: number | null;
        currentEpisode: number | null;
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        season: import(".prisma/client").AiringSeason;
        year: number | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        trailer: string | null;
        countryOfOrigin: string | null;
        tags: string[];
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number;
        averagePopularity: number;
        save: () => Pris.Prisma__AnimeClient<{
            title: PrismaJson.AnimeTitle;
            synonyms: string[];
            totalEpisodes: number | null;
            currentEpisode: number | null;
            bannerImage: string | null;
            coverImage: string | null;
            color: string | null;
            season: import(".prisma/client").AiringSeason;
            year: number | null;
            status: import(".prisma/client").AiringStatus | null;
            genres: string[];
            description: string | null;
            format: import(".prisma/client").MediaFormat | null;
            duration: number | null;
            trailer: string | null;
            countryOfOrigin: string | null;
            tags: string[];
            rating: PrismaJson.MetaSitesMetric;
            popularity: PrismaJson.MetaSitesMetric;
            id: string;
            malId: string;
            kitsuId: string | null;
            slug: string;
            mappings: Pris.JsonValue;
            type: string;
            relations: Pris.JsonValue;
            averageRating: number | null;
            averagePopularity: number | null;
        }, never, {
            result: {};
            model: {};
            query: {};
            client: {};
        }>;
    }[];
    top: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        totalEpisodes: number | null;
        currentEpisode: number | null;
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        season: import(".prisma/client").AiringSeason;
        year: number | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        trailer: string | null;
        countryOfOrigin: string | null;
        tags: string[];
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number;
        averagePopularity: number;
        save: () => Pris.Prisma__AnimeClient<{
            title: PrismaJson.AnimeTitle;
            synonyms: string[];
            totalEpisodes: number | null;
            currentEpisode: number | null;
            bannerImage: string | null;
            coverImage: string | null;
            color: string | null;
            season: import(".prisma/client").AiringSeason;
            year: number | null;
            status: import(".prisma/client").AiringStatus | null;
            genres: string[];
            description: string | null;
            format: import(".prisma/client").MediaFormat | null;
            duration: number | null;
            trailer: string | null;
            countryOfOrigin: string | null;
            tags: string[];
            rating: PrismaJson.MetaSitesMetric;
            popularity: PrismaJson.MetaSitesMetric;
            id: string;
            malId: string;
            kitsuId: string | null;
            slug: string;
            mappings: Pris.JsonValue;
            type: string;
            relations: Pris.JsonValue;
            averageRating: number | null;
            averagePopularity: number | null;
        }, never, {
            result: {};
            model: {};
            query: {};
            client: {};
        }>;
    }[];
    seasonal: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        totalEpisodes: number | null;
        currentEpisode: number | null;
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        season: import(".prisma/client").AiringSeason;
        year: number | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        trailer: string | null;
        countryOfOrigin: string | null;
        tags: string[];
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number;
        averagePopularity: number;
        save: () => Pris.Prisma__AnimeClient<{
            title: PrismaJson.AnimeTitle;
            synonyms: string[];
            totalEpisodes: number | null;
            currentEpisode: number | null;
            bannerImage: string | null;
            coverImage: string | null;
            color: string | null;
            season: import(".prisma/client").AiringSeason;
            year: number | null;
            status: import(".prisma/client").AiringStatus | null;
            genres: string[];
            description: string | null;
            format: import(".prisma/client").MediaFormat | null;
            duration: number | null;
            trailer: string | null;
            countryOfOrigin: string | null;
            tags: string[];
            rating: PrismaJson.MetaSitesMetric;
            popularity: PrismaJson.MetaSitesMetric;
            id: string;
            malId: string;
            kitsuId: string | null;
            slug: string;
            mappings: Pris.JsonValue;
            type: string;
            relations: Pris.JsonValue;
            averageRating: number | null;
            averagePopularity: number | null;
        }, never, {
            result: {};
            model: {};
            query: {};
            client: {};
        }>;
    }[];
} | {
    trending: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        countryOfOrigin: string | null;
        tags: string[];
        totalChapters: number | null;
        totalVolumes: number | null;
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number | null;
        averagePopularity: number | null;
    }[];
    popular: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        countryOfOrigin: string | null;
        tags: string[];
        totalChapters: number | null;
        totalVolumes: number | null;
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number | null;
        averagePopularity: number | null;
    }[];
    top: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        countryOfOrigin: string | null;
        tags: string[];
        totalChapters: number | null;
        totalVolumes: number | null;
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number | null;
        averagePopularity: number | null;
    }[];
    seasonal: {
        title: PrismaJson.AnimeTitle;
        synonyms: string[];
        bannerImage: string | null;
        coverImage: string | null;
        color: string | null;
        status: import(".prisma/client").AiringStatus | null;
        genres: string[];
        description: string | null;
        format: import(".prisma/client").MediaFormat | null;
        duration: number | null;
        countryOfOrigin: string | null;
        tags: string[];
        totalChapters: number | null;
        totalVolumes: number | null;
        rating: PrismaJson.MetaSitesMetric;
        popularity: PrismaJson.MetaSitesMetric;
        id: string;
        malId: string;
        kitsuId: string | null;
        slug: string;
        mappings: Pris.JsonValue;
        type: string;
        relations: Pris.JsonValue;
        averageRating: number | null;
        averagePopularity: number | null;
    }[];
}>;
export declare const search: (query: string, type: Type, formats: Format[], page: number, perPage: number) => Promise<never[]>;
export declare const info: (id: string) => Promise<Anime | Manga | null>;
